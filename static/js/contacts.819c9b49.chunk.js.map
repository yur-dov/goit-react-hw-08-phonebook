{"version":3,"file":"static/js/contacts.819c9b49.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/PatchForm/PatchForm.module.css?ef04","components/PatchForm/PatchForm.js","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.js","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","views/ContactsView.js","webpack://react-homework-template/./src/views/Views.module.css?da62"],"sourcesContent":["export const getFilter = state => state.contacts.filter;\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilteredContacts = state =>\n    getContacts(state).filter(contact =>\n        contact.name.toLowerCase().includes(getFilter(state).toLowerCase())\n    );\nexport const getError = state => state.contacts.error;\nexport const getLoading = state => state.contacts.loading;\n\nexport const getIsFetchingContacts = state => state.contacts.isFetchingContacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Phonebook_form__J23fu\",\"label\":\"Phonebook_label__Qzztg\",\"input\":\"Phonebook_input__8yiEQ\",\"title\":\"Phonebook_title__ipARL\"};","/* react, react-router-dom */\nimport { useState } from 'react';\n\n/* redux state */\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\n/* style, notification, spinner, materialUI */\nimport s from './Phonebook.module.css';\nimport toast from 'react-hot-toast';\nimport { Circles } from 'react-loader-spinner';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\n\nfunction Phonebook() {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const contacts = useSelector(contactsSelectors.getContacts);\n    const loading = useSelector(contactsSelectors.getLoading);\n    const dispatch = useDispatch();\n\n    const handleInput = evt => {\n        switch (evt.currentTarget.id) {\n            case 'nameAdd':\n                setName(evt.currentTarget.value);\n                break;\n            case 'numberAdd':\n                setNumber(evt.currentTarget.value);\n                break;\n            default:\n                console.log('wrong name');\n        }\n    };\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        addContactToContacts(name, number);\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n    const addContactToContacts = (name, number) => {\n        const isNameInContacts = contacts\n            .map(({ name }) => name.toLowerCase())\n            .includes(name.toLowerCase());\n\n        if (isNameInContacts) {\n            toast.error(`${name} is already in contacts`, {\n                duration: 3000,\n                position: 'top-center',\n            });\n        } else {\n            dispatch(contactsOperations.addContact({ name, number }));\n            reset();\n        }\n    };\n\n    return (\n        <form className={s.form} onSubmit={handleSubmit}>\n            <h2 className={s.title}>Add contact</h2>\n            <label className={s.label} htmlFor=\"nameAdd\">\n                Name\n            </label>\n            <input\n                type=\"text\"\n                onChange={handleInput}\n                name=\"name\"\n                value={name}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                className={s.input}\n                id=\"nameAdd\"\n            />\n\n            <label className={s.label} htmlFor=\"numberAdd\">\n                Number\n            </label>\n            <input\n                type=\"tel\"\n                onChange={handleInput}\n                name=\"number\"\n                value={number}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                className={s.input}\n                id=\"numberAdd\"\n            />\n\n            <Button\n                type=\"submit\"\n                variant=\"contained\"\n                endIcon={\n                    name && loading ? (\n                        <Circles height=\"15\" width=\"15\" color=\"white\" ariaLabel=\"loading\" />\n                    ) : (\n                        <SendIcon />\n                    )\n                }\n                size=\"large\"\n            >\n                Add contact\n            </Button>\n        </form>\n    );\n}\n\nexport default Phonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\",\"title\":\"Filter_title__pSkfx\"};","/* redux state*/\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from 'redux/contacts';\n\n/* style*/\nimport s from './Filter.module.css';\n\nexport const Filter = () => {\n    const filter = useSelector(contactsSelectors.getFilter);\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <h2 className={s.title}>Contacts List</h2>\n            <label className={s.label}>\n                Find Contacts by name\n                <input\n                    type=\"text\"\n                    onChange={evt =>\n                        dispatch(contactsActions.setFilter(evt.currentTarget.value))\n                    }\n                    name=\"filter\"\n                    value={filter}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    className={s.input}\n                />\n            </label>\n        </>\n    );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"PatchForm_form__V2ul1\",\"label\":\"PatchForm_label__MwJQE\",\"input\":\"PatchForm_input__JDiGI\",\"title\":\"PatchForm_title__yIMj6\",\"buttonContainer\":\"PatchForm_buttonContainer__daJTf\"};","/* react, react-router-dom */\nimport { useState } from 'react';\n\n/* redux-state */\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\n/* style, materialUI, spinner propTypes */\nimport s from './PatchForm.module.css';\nimport { Circles } from 'react-loader-spinner';\nimport Button from '@mui/material/Button';\nimport EditIcon from '@mui/icons-material/Edit';\nimport PropTypes from 'prop-types';\n\nfunction PatchForm({ onClick, id }) {\n    const contacts = useSelector(contactsSelectors.getContacts);\n    const contactToEdit = contacts.find(contact => contact.id === id);\n\n    const [name, setName] = useState(contactToEdit.name);\n    const [number, setNumber] = useState(contactToEdit.number);\n\n    const loading = useSelector(contactsSelectors.getLoading);\n    const dispatch = useDispatch();\n\n    const handleInput = evt => {\n        switch (evt.currentTarget.id) {\n            case 'namePatch':\n                setName(evt.currentTarget.value);\n                break;\n            case 'numberPatch':\n                setNumber(evt.currentTarget.value);\n                break;\n            default:\n                console.log('wrong name');\n        }\n    };\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        dispatch(contactsOperations.patchContact({ name, number, id }));\n        onClick();\n    };\n\n    return (\n        <form className={s.form} onSubmit={handleSubmit}>\n            <h2 className={s.title}>Edit contact</h2>\n            <label className={s.label} htmlFor=\"namePatch\">\n                Name\n            </label>\n            <input\n                type=\"text\"\n                onChange={handleInput}\n                name=\"name\"\n                value={name}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                className={s.input}\n                id=\"namePatch\"\n            />\n\n            <label className={s.label} htmlFor=\"numberPatch\">\n                Number\n            </label>\n            <input\n                type=\"tel\"\n                onChange={handleInput}\n                name=\"number\"\n                value={number}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                className={s.input}\n                id=\"numberPatch\"\n            />\n\n            <div className={s.buttonContainer}>\n                <Button\n                    type=\"button\"\n                    variant=\"contained\"\n                    size=\"large\"\n                    onClick={onClick}\n                >\n                    Cancel\n                </Button>\n\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    endIcon={\n                        loading ? (\n                            <Circles\n                                height=\"15\"\n                                width=\"15\"\n                                color=\"white\"\n                                ariaLabel=\"loading\"\n                            />\n                        ) : (\n                            <EditIcon />\n                        )\n                    }\n                    size=\"large\"\n                >\n                    Edit\n                </Button>\n            </div>\n        </form>\n    );\n}\n\nexport default PatchForm;\n\nPatchForm.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"Modal_Overlay__yoxbg\",\"Modal\":\"Modal_Modal__I1UYJ\"};","/* react, react-router-dom */\n\nimport React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\n/* components */\nimport PatchForm from 'components/PatchForm';\n\n/* style, propTypes */\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ onClick, id }) {\n    useEffect(() => {\n        const onClose = e => {\n            if (e.code === 'Escape') {\n                onClick();\n            }\n        };\n\n        document.addEventListener('keydown', onClose);\n        return function clean() {\n            document.removeEventListener('keydown', onClose);\n        };\n    });\n\n    return createPortal(\n        <div className={s.Overlay}>\n            <div className={s.Modal}>\n                <PatchForm onClick={onClick} id={id} />\n            </div>\n        </div>,\n        modalRoot\n    );\n}\n\nexport default Modal;\n\nModal.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactListItem_item__UAAix\",\"name\":\"ContactListItem_name__cIBvF\",\"button\":\"ContactListItem_button__SG6H2\",\"contactContainer\":\"ContactListItem_contactContainer__0rcmw\"};","/* react, react-router-dom */\nimport React from 'react';\n\n/* redux-state */\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\n\n/* style, materialUI, spinner */\n\nimport s from './ContactListItem.module.css';\nimport { Circles } from 'react-loader-spinner';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Fab from '@mui/material/Fab';\nimport EditIcon from '@mui/icons-material/Edit';\n\n/* propTypes */\nimport PropTypes from 'prop-types';\n\nconst ContactListItem = ({ id, name, number, loader, handleShowModal }) => {\n    const dispatch = useDispatch();\n\n    return (\n        <li className={s.item}>\n            <Fab\n                size=\"small\"\n                color=\"primary\"\n                aria-label=\"edit\"\n                className={s.fab}\n                onClick={handleShowModal}\n                id={id}\n            >\n                <EditIcon />\n            </Fab>\n            <div className={s.contactContainer}>\n                <span className={s.name}>{name}</span>\n                <span className={s.number}>{number}</span>\n            </div>\n\n            <Button\n                className={s.button}\n                id={id}\n                name={name}\n                variant=\"outlined\"\n                startIcon={\n                    loader ? (\n                        <Circles height=\"20\" width=\"20\" color=\"blue\" ariaLabel=\"loading\" />\n                    ) : (\n                        <DeleteIcon />\n                    )\n                }\n                onClick={evt => {\n                    dispatch(\n                        contactsOperations.deleteContact({\n                            id: evt.currentTarget.id,\n                            name: evt.currentTarget.name,\n                        })\n                    );\n                }}\n            >\n                Delete\n            </Button>\n        </li>\n    );\n};\n\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    loader: PropTypes.bool.isRequired,\n    handleShowModal: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","/* react, react-router-dom */\nimport React, { useState, useEffect } from 'react';\n\n/* redux-state */\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\n/* style */\nimport s from './ContactList.module.css';\n\n/* components */\nimport Modal from 'components/Modal';\nimport ContactListItem from '../ContactListItem';\n\nconst ContactList = () => {\n    const [patchContactId, setPatchContactId] = useState(null);\n\n    const allContacts = useSelector(contactsSelectors.getContacts);\n    const filteredContacts = useSelector(contactsSelectors.getFilteredContacts);\n    const loading = useSelector(contactsSelectors.getLoading);\n    const isFetchingContacts = useSelector(\n        contactsSelectors.getIsFetchingContacts\n    );\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(contactsOperations.fetchContacts());\n    }, [dispatch]);\n\n    const handleHideModal = e => {\n        setPatchContactId(null);\n    };\n\n    const handleShowModal = e => {\n        setPatchContactId(e.currentTarget.id);\n    };\n\n    if (filteredContacts.length === 0 && allContacts.length !== 0) {\n        return <p>Don't find any contact, try something else</p>;\n    }\n\n    return (\n        <>\n            <ul className={s.list}>\n                {filteredContacts.map(({ name, number, id }) => (\n                    <ContactListItem\n                        key={id}\n                        id={id}\n                        name={name}\n                        number={number}\n                        loader={loading?.id === id}\n                        handleShowModal={handleShowModal}\n                    />\n                ))}\n            </ul>\n\n            {allContacts.length === 0 && !isFetchingContacts && (\n                <p>You don't have any contact, please add your contacts</p>\n            )}\n\n            {patchContactId && (\n                <Modal onClick={handleHideModal} id={patchContactId} />\n            )}\n        </>\n    );\n};\n\nexport default ContactList;\n","/* components */\nimport Phonebook from 'components/Phonebook';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\n\n/* redux state */\nimport { useSelector } from 'react-redux';\nimport { contactsSelectors } from 'redux/contacts';\n\n/* style */\nimport s from './Views.module.css';\n\nconst ContactsView = () => {\n    const error = useSelector(contactsSelectors.getError);\n    return (\n        <div className={s.container}>\n            <Phonebook />\n            <div>\n                <Filter />\n                {error ? <h2>{error}, please try latter</h2> : <ContactList />}\n            </div>\n        </div>\n    );\n};\n\nexport default ContactsView;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Views_title__AQG3M\",\"form\":\"Views_form__SBIbD\",\"label\":\"Views_label__1lpis\",\"input\":\"Views_input__bzFs3\",\"container\":\"Views_container__xtdM7\"};"],"names":["getFilter","state","contacts","filter","getContacts","items","getFilteredContacts","contact","name","toLowerCase","includes","getError","error","getLoading","loading","getIsFetchingContacts","isFetchingContacts","useState","setName","number","setNumber","useSelector","contactsSelectors","dispatch","useDispatch","handleInput","evt","currentTarget","id","value","console","log","addContactToContacts","map","toast","duration","position","contactsOperations","className","s","onSubmit","preventDefault","htmlFor","type","onChange","pattern","title","required","Button","variant","endIcon","height","width","color","ariaLabel","Send","size","contactsActions","onClick","contactToEdit","find","Edit","modalRoot","document","querySelector","useEffect","onClose","e","code","addEventListener","removeEventListener","createPortal","loader","handleShowModal","Fab","startIcon","Delete","patchContactId","setPatchContactId","allContacts","filteredContacts","length"],"sourceRoot":""}